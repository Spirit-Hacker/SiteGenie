// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  clerkId       String?
  email         String?  @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  plan          PlanType @default(BASIC)
  planStartedAt DateTime @default(now())
  planEndsAt    DateTime
  Plan          Plan?    @relation(fields: [planId], references: [id])
  planId        String?
}

model Plan {
  id          String @id @default(uuid())
  name        String @unique
  description String
  price       Int // in cents
  features    Json // optional JSON of features
  users       User[]
}

model Project {
  id          String   @id @default(uuid())
  description String?
  prompt      Prompt[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  action      Action[]
}

model Prompt {
  id        String     @id @default(uuid())
  content   String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  project   Project    @relation(fields: [projectId], references: [id])
  projectId String
  type      PromptType
  Action    Action[]
}

model Action {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  project   Project  @relation(fields: [projectId], references: [id])
  projectId String
  prompt    Prompt?  @relation(fields: [promptId], references: [id])
  promptId  String?
  content   String
}

enum PromptType {
  USER
  SYSTEM
}

enum PlanType {
  BASIC
  PREMIUM
  BUSINESS
}
